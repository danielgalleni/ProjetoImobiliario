/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Galleni
 */
public class BuscaPadrao extends javax.swing.JFrame {

    /**
     * Creates new form BuscaPadrao
     */
    public BuscaPadrao() {
        initComponents();
    }

 int codigo = 0, btnBuscar = 0, btnSelecionar = 0;

    public void ValidarBotoes() {
        jBBuscar.setSelected(false);
        jBSair.setSelected(false);

        if (jTBusca.getRowCount() != 0) {
            jBSair.setText("Selecionar");
            btnSelecionar = 1;
        } else {
            jBSair.setText("Sair");
            btnSelecionar = 0;
        }
    }

    DefaultTableModel dtm = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int col) {
            return false;
        }
    };

    public void CarregarGrade(Object[] listaBusca, String[] cabecalho) {
        // Define o título das colunas
        if (cabecalho != null) {
            for (String c : cabecalho) {
                dtm.addColumn(c);
            }
            // Chama a funçao para escrever as linhas
            EscreverLinha(listaBusca);
        }

        jTBusca.setModel(dtm);
    }

    public void EscreverLinha(Object[] listaBusca) {
        if (listaBusca != null) {
            for (Object c : listaBusca) {
                dtm.addRow(new String[]{
                    c.toString() + "Nome",
                    c.toString() + "Endereço",
                    c.toString() + "Numero",
                    c.toString() + "Bairro",
                    c.toString() + "Cidade",
                    c.toString() + "Telefone",
                    c.toString() + "Celular",
                    c.toString() + "CPF",
                });
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTBusca = new javax.swing.JTable();
        jBSair = new javax.swing.JToggleButton();
        jBBuscar = new javax.swing.JToggleButton();
        jTFBusca = new javax.swing.JTextField();
        jCBBusca = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTBusca.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTBusca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTBuscaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTBusca);

        jBSair.setText("Sair");
        jBSair.setName("btnSair"); // NOI18N
        jBSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSairActionPerformed(evt);
            }
        });

        jBBuscar.setText("Buscar");
        jBBuscar.setName("btnNovo"); // NOI18N
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        jTFBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFBuscaActionPerformed(evt);
            }
        });

        jCBBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome", "CPF", "Endereço", "Cidade" }));

        jLabel2.setText("Digite: Cidade, Endereço ou Nome");

        jLabel1.setText("Buscar por");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(47, 47, 47))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jCBBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBSair, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar)
                    .addComponent(jBSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSairActionPerformed
        if (jTBusca.getRowCount() == 0) {
            if (JOptionPane.showConfirmDialog(null, "Deseja realmente sair sem selecionar uma linha?", "Atenção", JOptionPane.YES_NO_OPTION) == 0) {
                this.dispose();
            } else {
                jBSair.setSelected(false);
            }
        } else {
            this.dispose();
        }

    }//GEN-LAST:event_jBSairActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        //TODO: Dao dDao = new Dao();
        Object objetc[] = null;
        if (!jTFBusca.getText().equals("")) {
            // Caso o usuário digite algum termo para a busca
            switch (jCBBusca.getSelectedIndex()) {
                /*TODO: Tratar as buscas*/
                case 0:
                    // Buscar por Nome
                    try {
                        //TODO: CarregarGrade(objetc = dDao.buscarPorNome("%" + jTFBusca.getText() + "%"));
                    } catch (Exception ex) {
                        try {
                            JOptionPane.showMessageDialog(rootPane, "Erro.\nNão foi possível localizar o cadastro do cliente. Verifique o log abaixo: " + "\n\n" + ex);
                        } catch (Exception ex1) {
                            //TODO: Logger.getLogger(BuscaPadrao.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }
                    break;
                case 1:
                    // Buscar por CPF
                    try {
                        //TODO: CarregarGrade(objetc = dDao.buscarPorCPF("%" + jTFBusca.getText() + "%"));
                    } catch (Exception ex) {
                        try {
                            JOptionPane.showMessageDialog(rootPane, "Erro.\nNão foi possível localizar o cadastro do cliente. Verifique o log abaixo: " + "\n\n" + ex);
                        } catch (Exception ex1) {
                            //TODO: Logger.getLogger(BuscaPadrao.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }
                    break;
                case 2:
                    // Buscar por endereço
                    try {
                        //TODO: CarregarGrade(objetc = dDao.buscarPorEndereco("%" + jTFBusca.getText() + "%"));
                    } catch (Exception ex) {
                        try {
                            JOptionPane.showMessageDialog(rootPane, "Erro.\nNão foi possível localizar o cadastro do cliente. Verifique o log abaixo: " + "\n\n" + ex);
                        } catch (Exception ex1) {
                            //TODO: Logger.getLogger(BuscaPadrao.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }
                    break;
                case 3:
                    // Buscar por Cidade
                    try {
                        //TODO: CarregarGrade(objetc = dDao.buscarPorCidade("%" + jTFBusca.getText() + "%"));
                    } catch (Exception ex) {
                        try {
                            JOptionPane.showMessageDialog(rootPane, "Erro.\nNão foi possível localizar o cadastro do cliente. Verifique o log abaixo: " + "\n\n" + ex);
                        } catch (Exception ex1) {
                            //TODO: Logger.getLogger(BuscaPadrao.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                    }
                    break;
            }
        } else {
            // Caso o usuário não digite nenhum termo para a busca, será feita a busca por todos os clientes
            try {
                //TODO: CarregarGrade(objetc = dDao.listarTodos());
            } catch (Exception ex) {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Erro.\nNão foi possível localizar o cadastro do cliente. Verifique o log abaixo: " + "\n\n" + ex);
                } catch (Exception ex1) {
                    //Padrao: Logger.getLogger(BuscaPadrao.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        }

        this.ValidarBotoes();
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jTFBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFBuscaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.jBSairActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.ValidarBotoes();
    }//GEN-LAST:event_formWindowOpened

    private void jTBuscaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTBuscaMouseClicked
        /*TODO: Implementar*/
        /*if (evt.getClickCount() > 1) {
            Object object = this.getPeriodo();
            if (periodo != null) {
                ValidarBotoes(2);
                CarregaCampos(periodo);
            } else {
                ValidarBotoes(0);
            }
        }*/
    }//GEN-LAST:event_jTBuscaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscaPadrao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscaPadrao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscaPadrao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscaPadrao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscaPadrao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jBBuscar;
    private javax.swing.JToggleButton jBSair;
    private javax.swing.JComboBox jCBBusca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTBusca;
    private javax.swing.JTextField jTFBusca;
    // End of variables declaration//GEN-END:variables
}
